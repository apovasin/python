my1=hashlib.md5(b'1718')
my1.hexdigest()


mymd5='1b9b6ab72fa11c40dee09fd58b178c14'

import hashlib
g=0
while g<99999999:
    g=g+1
    if mymd5==hashlib.md5(str(g).encode()).hexdigest():
        print('result: ')    
        print (g)
    if g%1000000==0:
        print('current: ', g//1000000, '%')

import sys
sys.platform
sys.version
import os
folder=os.getcwd()
os.listdir()
os.mkdir('delme')
os.chdir('delme')
os.getcwd()
f2=open('.\\text1.txt','w')
f2.close()
Из строчки массив s1.split() as1.sort as2-''.join(as1)

import pickle
s=pickle.dumps(a1)
a2=pickle.loads(s)

import shutil



import hashlib
a=str(input())
s_list=list(hashlib.algorithms_guaranteed)
print('md5', hashlib.md5(str(a).encode()).hexdigest())
print('sha1', hashlib.sha1(str(a).encode()).hexdigest())
print('sha224', hashlib.sha224(str(a).encode()).hexdigest())
print('sha256', hashlib.sha256(str(a).encode()).hexdigest())
print('sha384', hashlib.sha384(str(a).encode()).hexdigest())
print('sha512', hashlib.sha512(str(a).encode()).hexdigest())



Лаборатория
Ввести с клавиатуры строку латиницей (1-3 слова). Зашифровать ее с использованием гарантированных алгоритмов шифрования. 
Сформировать словарь, где в качестве ключа используется название гарантированного алгоритма шифрования, 
а в качестве значения - результат шифрования в шестнадцатеричном представлении { 'sha1': 'd0b…', 'md5', '1f3…',…}.
Итог вывести отдельными операторами вывода в виде пар ключа и значения, отсортированных по возрастанию ключа:
md5 1f3…
sha1 d0b…

Пример входных данных:
apple

Пример выходных данных:
md5 1f3870be274f6c49b3e31a0c6728957f
sha1 d0be2dc421be4fcd0172e5afceea3970e2f3d940
sha224 b7bbfdf1a1012999b3c466fdeb906a629caa5e3e022428d1eb702281
sha256 3a7bd3e2360a3d29eea436fcfb7e44c735d117c42d1c1835420b6b9942dd4f1b
sha384 3d8786fcb588c93348756c6429717dc6c374a14f7029362281a3b21dc10250ddf0d0578052749822eb08bc0dc1e68b0f
sha512 844d8779103b94c18f4aa4cc0c3b4474058580a991fba85d3ca698a0bc9e52c5940feb7a65a3a290e17e6b23ee943ecc4f73e7490327245b4fe5d5efb590feb2
Вариант




